library(shiny)
runExample("01_hello")
runExample("01_hello")
),
library(shiny)
})
}
}
plotOutput("distPlot")
# generate an rnorm distribution and plot it
dist <- rnorm(input$obs)
)
))
))
))
))
))
))
)
)
)
})
})
})
library(shiny)
runAp("~/shinyapp")
runApp("~/shinyapp")
runApp("~/OrganicFoodPredictionSystem")
runApp("~/OrganicFoodPredictionSystem")
runApp("~/OrganicFoodPredictionSystem")
runApp("~/OrganicFoodPredictionSystem")
runApp("~/OrganicFoodPredictionSystem")
runApp("~/OrganicFoodPredictionSystem")
runApp("~/OrganicFoodPredictionSystem")
runApp("~/OrganicFoodPredictionSystem")
runApp("~/OrganicFoodPredictionSystem")
runApp("~/OrganicFoodPredictionSystem")
runApp("~/OrganicFoodPredictionSystem")
runApp("~/OrganicFoodPredictionSystem")
runApp("~/OrganicFoodPredictionSystem")
runApp("~/OrganicFoodPredictionSystem")
runApp("~/OrganicFoodPredictionSystem")
runApp("~/OrganicFoodPredictionSystem")
runApp("~/OrganicFoodPredictionSystem")
runApp("~/OrganicFoodPredictionSystem")
runApp("~/OrganicFoodPredictionSystem")
runApp("~/OrganicFoodPredictionSystem")
runApp("~/OrganicFoodPredictionSystem")
runApp("~/OrganicFoodPredictionSystem")
runApp("~/OrganicFoodPredictionSystem")
runApp("~/OrganicFoodPredictionSystem")
runApp("~/OrganicFoodPredictionSystem")
runApp("~/OrganicFoodPredictionSystem")
runApp("~/OrganicFoodPredictionSystem")
runApp("~/OrganicFoodPredictionSystem")
runApp("~/OrganicFoodPredictionSystem")
runApp("~/OrganicFoodPredictionSystem")
library(shiny)
library(Shiny)
install.packages('shiny')
runApp("~/OrganicFoodPredictionSystem")
runApp("~/OrganicFoodPredictionSystem")
pwd
runApp("~/OrganicFoodPredictionSystem")
runApp("~/OrganicFoodPredictionSystem")
runApp("~/OrganicFoodPredictionSystem")
~
/
library(Shiny)
library(shiny)
runApp("~/OrganicFoodPredictionSystem")
runApp("~/OrganicFoodPredictionSystem")
runApp("OrganicFoodPredictionSystem")
runApp("OrganicFoodPredictionSystem")
runApp("OrganicFoodPredictionSystem")
runApp("OrganicFoodPredictionSystem")
runApp("~/OrganicFoodPredictionSystem")
runApp("OrganicFoodPredictionSystem")
install.package('Shiny')
install.package("Shiny")
install.packages("Shiny")
y
install.packages("shiny")
library(shiny)
runApp("~/OrganicFoodPredictionSystem")
runApp("OrganicFoodPredictionSystem")
runApp("\OrganicFoodPredictionSystem")
runApp("\\OrganicFoodPredictionSystem")
runApp(appDir = getwd(), port = 8100L,
launch.browser = getOption("shiny.launch.browser", interactive()))
runApp(appDir = getwd(), port = 8100L,
launch.browser = getOption("shiny.launch.browser", interactive()))
runApp(appDir = getwd(), port = 8100L,
launch.browser = getOption("shiny.launch.browser", interactive()))
library(shiny)
runApp(appDir = getwd(), port = 8100L,
launch.browser = getOption("shiny.launch.browser", interactive()))
runApp("~/OrganicFoodPredictionSystem")
runApp("./OrganicFoodPredictionSystem")
runApp(appDir = getwd(), port = 8100L,
launch.browser = getOption("shiny.launch.browser", interactive()))
runApp()
runApp()
runApp()
library(googleVis)
library(shiny)
install.packages("googleVis")
runApp()
install.packages("googleVis")
install.packages("googleVis")
library(googleVis)
runApp()
library(shiny)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
